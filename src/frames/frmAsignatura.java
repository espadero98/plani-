
package frames;

import clases.Asignatura;
import clases.ControladorAsignatura;
import clases.ErrorPlanificacion;
import clases.imgTabla;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class frmAsignatura extends javax.swing.JFrame {

    private DefaultTableModel modeloAsignatura;
    
    
    /**
     * Creates new form frmAsignatura
     */
    private String ruta_archivo="";
    private String nombrePdfAnterior="";
    public frmAsignatura() {
        initComponents();
        rellenoTabla();
        frmModificar.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.frmModificar.setLocationRelativeTo(null);
    }
      
    public void seleccionar_pdf() {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("pdf", "pdf");
        chooser.setFileFilter(filter);
        int se = chooser.showOpenDialog(this);
        if (se == 0) {
            
            this.txtNombrePdf.setText("" + chooser.getSelectedFile().getName());
            ruta_archivo = chooser.getSelectedFile().getAbsolutePath();

        } else {
        }
    }
    
    
    //---------------------creacion de tabla--------------------------------
    public void rellenoTabla(){
        String[] encabezadosTabla={"Código","Asignatura","Horas Teoricas","Horas Practicas","Número Unidades","nombrePdf","pdf"};
        modeloAsignatura=new DefaultTableModel();
        tblAsignatura.setDefaultRenderer(Object.class,new imgTabla() );
        tblAsignatura.setRowHeight(30);
        
        
        ArrayList<Asignatura> asignaturas = new ArrayList();
        Object[] fila = new Object[7];
        
        try {
           
        
            asignaturas = ControladorAsignatura.Buscar();
            modeloAsignatura.setColumnIdentifiers(encabezadosTabla);
            Iterator<Asignatura> asig = asignaturas.iterator();
            
            
            
        
            while (asig.hasNext()) {
                    
                    fila[0] = asig.next();
                    fila[1] = asig.next();
                    fila[2] = asig.next();
                    fila[3] = asig.next();
                    fila[4] = asig.next();
                    fila[5] = asig.next();
                    
                    //me muestra icono si hay un pdf guardado
                    if (asig.next() != null) {
                        fila[6] = new JLabel(new ImageIcon("src/iconos/32pdf.png"));
                    }else{
                        fila[6] = new JLabel("Vacio");
                    }
                    
                    
                    modeloAsignatura.addRow(fila);
                    
                    tblAsignatura.setModel(modeloAsignatura);
                }
            
        } catch (ErrorPlanificacion ex) {
            Logger.getLogger(frmAsignatura.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frmModificar = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblAgregar1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAsignatura = new javax.swing.JTextField();
        txtHorasTeoricas = new javax.swing.JTextField();
        txtHorasPracticas = new javax.swing.JTextField();
        txtNumeroUnidades = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblCancelar = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNombrePdf = new javax.swing.JTextField();
        btnPdf = new javax.swing.JButton();
        lblAgregar = new javax.swing.JLabel();
        lblModificar = new javax.swing.JLabel();
        lblAtras = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblEliminar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAsignatura = new javax.swing.JTable();

        frmModificar.setMinimumSize(new java.awt.Dimension(600, 600));
        frmModificar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Asignatura:");
        frmModificar.getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel2.setText("Horas Teóricas:");
        frmModificar.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, -1));

        jLabel3.setText("Horas practicas:");
        frmModificar.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, -1, -1));

        lblAgregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/edit.png"))); // NOI18N
        lblAgregar1.setText("Modificar");
        lblAgregar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregar1MouseClicked(evt);
            }
        });
        frmModificar.getContentPane().add(lblAgregar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, -1, -1));

        jLabel7.setText("Modificar Asignatura");
        frmModificar.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        txtAsignatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAsignaturaKeyTyped(evt);
            }
        });
        frmModificar.getContentPane().add(txtAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 180, -1));

        txtHorasTeoricas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorasTeoricasKeyTyped(evt);
            }
        });
        frmModificar.getContentPane().add(txtHorasTeoricas, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 180, -1));

        txtHorasPracticas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorasPracticasKeyTyped(evt);
            }
        });
        frmModificar.getContentPane().add(txtHorasPracticas, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 180, -1));

        txtNumeroUnidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroUnidadesKeyTyped(evt);
            }
        });
        frmModificar.getContentPane().add(txtNumeroUnidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 180, -1));
        frmModificar.getContentPane().add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 90, -1));

        jLabel8.setText("Código:");
        frmModificar.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, -1, -1));

        lblCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/cancelar.png"))); // NOI18N
        lblCancelar.setText("Cancelar");
        lblCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCancelarMouseClicked(evt);
            }
        });
        frmModificar.getContentPane().add(lblCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, -1, -1));

        jLabel10.setText("Numero Unidades:");
        frmModificar.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        jLabel11.setText("Nombre pdf:");
        frmModificar.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));
        frmModificar.getContentPane().add(txtNombrePdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 180, -1));

        btnPdf.setText("Buscar Pdf");
        btnPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPdfActionPerformed(evt);
            }
        });
        frmModificar.getContentPane().add(btnPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 180, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        lblAgregar.setText("agregar");
        lblAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarMouseClicked(evt);
            }
        });
        getContentPane().add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, -1, -1));

        lblModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/modificar.png"))); // NOI18N
        lblModificar.setText("modificar");
        lblModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModificarMouseClicked(evt);
            }
        });
        getContentPane().add(lblModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, -1, -1));

        lblAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/back.png"))); // NOI18N
        lblAtras.setText("atras");
        lblAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtrasMouseClicked(evt);
            }
        });
        getContentPane().add(lblAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel4.setText("ASIGNATURA");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, -1, -1));

        lblEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/delete.png"))); // NOI18N
        lblEliminar.setText("eliminar");
        lblEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEliminarMouseClicked(evt);
            }
        });
        getContentPane().add(lblEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, -1, -1));

        tblAsignatura=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tblAsignatura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Asignatura", "Horas teoricas", "Horas Practicas", "Numero Unidades", "pdf"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAsignatura.getTableHeader().setResizingAllowed(false);
        tblAsignatura.getTableHeader().setReorderingAllowed(false);
        tblAsignatura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAsignaturaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAsignatura);
        if (tblAsignatura.getColumnModel().getColumnCount() > 0) {
            tblAsignatura.getColumnModel().getColumn(0).setResizable(false);
            tblAsignatura.getColumnModel().getColumn(1).setResizable(false);
            tblAsignatura.getColumnModel().getColumn(2).setResizable(false);
            tblAsignatura.getColumnModel().getColumn(3).setResizable(false);
            tblAsignatura.getColumnModel().getColumn(4).setResizable(false);
            tblAsignatura.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 700, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarMouseClicked
       frmAsignaturaAgregar add=new frmAsignaturaAgregar();
        add.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblAgregarMouseClicked

    private void lblModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModificarMouseClicked
        if(tblAsignatura.getSelectedRow()!=-1){
            int seleccion; 
            frmModificar.setVisible(true);
            this.setVisible(false);
            
            seleccion = tblAsignatura.getSelectedRow();
            txtCodigo.setText(tblAsignatura.getValueAt(seleccion, 0).toString());
            txtAsignatura.setText((tblAsignatura.getValueAt(seleccion, 1).toString()));
            txtHorasTeoricas.setText((tblAsignatura.getValueAt(seleccion, 2).toString()));
            txtHorasPracticas.setText((tblAsignatura.getValueAt(seleccion, 3).toString()));
            txtNumeroUnidades.setText((tblAsignatura.getValueAt(seleccion, 4).toString()));
            txtNombrePdf.setText(tblAsignatura.getValueAt(seleccion,5).toString());
            nombrePdfAnterior=tblAsignatura.getValueAt(seleccion,5).toString();
            
            
//            llenandoTxtPeli();
//            
//            rellenoTablaActor();
//            rellenoTablaDirectores();
//            rellenoTablaGenero();
//            rellenoComboClasifiacion();
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una fila de la tabla");
        }
    }//GEN-LAST:event_lblModificarMouseClicked

    private void lblEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEliminarMouseClicked
        Asignatura asig=new Asignatura();
        if(tblAsignatura.getSelectedRow()!=-1){
            try {
                int seleccion;
                seleccion = tblAsignatura.getSelectedRow();
                asig.setIdAsignatura(tblAsignatura.getValueAt(seleccion, 0).toString());
                ControladorAsignatura.Eliminar(asig);
                JOptionPane.showMessageDialog(null, "La eliminacion fue correcta");
                modeloAsignatura.removeRow(tblAsignatura.getSelectedRow());
            } catch (ErrorPlanificacion ex) {
                JOptionPane.showMessageDialog(null, "Elija una fila de la tabla");
            }
        }
    }//GEN-LAST:event_lblEliminarMouseClicked

    private void lblCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCancelarMouseClicked
        frmModificar.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_lblCancelarMouseClicked

    private void lblAgregar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregar1MouseClicked
        String codigo=txtCodigo.getText();
        String asignatura=txtAsignatura.getText();
        int horasTeoricas=Integer.parseInt(txtHorasTeoricas.getText());
        int horasPracticas=Integer.parseInt(txtHorasPracticas.getText());
        int numeroUnidades=Integer.parseInt(txtNumeroUnidades.getText());
        String nombrePdf=txtNombrePdf.getText();

        if (codigo.isEmpty() && asignatura.isEmpty() && (horasTeoricas>0) && (horasPracticas>0) && (numeroUnidades>0)) {
            JOptionPane.showMessageDialog(null, "Rellene todos los campos por favor");
        }else{
            try {
                Asignatura asig=new Asignatura();
                
                asig.setIdAsignatura(codigo);
                asig.setAsignatura(asignatura);
                asig.setHorasTeoricas(horasTeoricas);
                asig.setHorasPracticas(horasPracticas);
                asig.setNumeroUnidades(numeroUnidades);
                asig.setNombrePdf(nombrePdf);
                
                if (nombrePdf.equals(nombrePdfAnterior)) {
                    byte[] mipdf=ControladorAsignatura.obtenerPdf(codigo);
                    asig.setDescripcionPdf(mipdf);
                    
                }else{
                    //Conviertiendo a bytes el pdf
                    byte[] pdf = new byte[(int) ruta_archivo.length()];
                    InputStream input = new FileInputStream(ruta_archivo);
                    input.read(pdf);
                    asig.setDescripcionPdf(pdf);
                }
                
                
                
                ControladorAsignatura.Modificar(asig);
                JOptionPane.showMessageDialog(null, "Se modifico exitosamente!!");
            } catch (ErrorPlanificacion ex) {
                Logger.getLogger(frmAsignatura.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmAsignatura.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(frmAsignatura.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblAgregar1MouseClicked

    private void btnPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPdfActionPerformed
        seleccionar_pdf();
    }//GEN-LAST:event_btnPdfActionPerformed

    private void lblAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseClicked
        frmMenu mostrar=new frmMenu();
        mostrar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblAtrasMouseClicked

    private void tblAsignaturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAsignaturaMouseClicked
        int column = tblAsignatura.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tblAsignatura.getRowHeight();
        
        
        if (row < tblAsignatura.getRowCount() && row >= 0 && column < tblAsignatura.getColumnCount() && column >= 0) {
            String id = tblAsignatura.getValueAt(row, 0).toString();
            Object value = tblAsignatura.getValueAt(row, column);
            if (value instanceof JLabel) {
//                ((JButton) value).doClick();
//                JButton boton = (JButton) value;

//                if (boton.getText().equals("Vacio")) {
//                    JOptionPane.showMessageDialog(null, "No hay archivo");
//                } else {
                    ControladorAsignatura pd = new ControladorAsignatura();
                    pd.ejecutar_archivoPDF(id);
                    try {
                        Desktop.getDesktop().open(new File("new.pdf"));
                    } catch (Exception ex) {
                    }
//                }

            } else {
                String name = "" + tblAsignatura.getValueAt(row, 1);
                
            }
        }
    }//GEN-LAST:event_tblAsignaturaMouseClicked

    private void txtAsignaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAsignaturaKeyTyped
         int c=(int) evt.getKeyChar();
        char mayu=evt.getKeyChar();

        if ((c>=65 && c<=90) || (c>=97 && c<=122)  || (c==32) || (c==8) || (c >=48 && c<=57) || (c== (char)KeyEvent.VK_BACK_SPACE) || (c== (char)KeyEvent.VK_ENTER)) {
            if (Character.isLowerCase(mayu)) {
                String cadena=(""+mayu).toUpperCase();
                mayu=cadena.charAt(0);
                evt.setKeyChar(mayu);
            }
        }else{
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAsignaturaKeyTyped

    private void txtHorasTeoricasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasTeoricasKeyTyped
         int c=(int) evt.getKeyChar();

        if ((c >=48 && c<=57) || (c==8) || (c== (char)KeyEvent.VK_BACK_SPACE) || (c== (char)KeyEvent.VK_ENTER)) {
            //No pasa nada
        }else{
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtHorasTeoricasKeyTyped

    private void txtHorasPracticasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasPracticasKeyTyped
         int c=(int) evt.getKeyChar();

        if ((c >=48 && c<=57) || (c==8) || (c== (char)KeyEvent.VK_BACK_SPACE) || (c== (char)KeyEvent.VK_ENTER)) {
            //No pasa nada
        }else{
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtHorasPracticasKeyTyped

    private void txtNumeroUnidadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroUnidadesKeyTyped
         int c=(int) evt.getKeyChar();

        if ((c >=48 && c<=57) || (c==8) || (c== (char)KeyEvent.VK_BACK_SPACE) || (c== (char)KeyEvent.VK_ENTER)) {
            //No pasa nada
        }else{
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroUnidadesKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAsignatura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPdf;
    private javax.swing.JFrame frmModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblAgregar1;
    private javax.swing.JLabel lblAtras;
    private javax.swing.JLabel lblCancelar;
    private javax.swing.JLabel lblEliminar;
    private javax.swing.JLabel lblModificar;
    private javax.swing.JTable tblAsignatura;
    private javax.swing.JTextField txtAsignatura;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtHorasPracticas;
    private javax.swing.JTextField txtHorasTeoricas;
    private javax.swing.JTextField txtNombrePdf;
    private javax.swing.JTextField txtNumeroUnidades;
    // End of variables declaration//GEN-END:variables
}
